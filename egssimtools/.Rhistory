theme_void()
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait))) +
geom_node_point(aes(color = degree)) +
scale_edge_color_manual(values = c("forestgreen", "goldenrod", "grey")) +
scale_color_gradient(low = "lightgrey", high = "black") +
theme_void()
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait))) +
geom_node_point(aes(color = factor(trait))) +
scale_edge_color_manual(values = c("forestgreen", "goldenrod", "grey")) +
scale_color_manual(values = c("forestgreen", "goldenrod", "grey")) +
theme_void()
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait))) +
geom_node_point(aes(color = factor(trait))) +
scale_edge_color_manual(values = c("forestgreen", "goldenrod", "grey")) +
scale_color_manual(values = c("forestgreen", "goldenrod", "grey")) +
theme_void()
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait))) +
geom_node_point(aes(color = factor(trait)), shape = 21) +
scale_edge_color_manual(values = c("forestgreen", "goldenrod", "grey")) +
scale_color_manual(values = c("forestgreen", "goldenrod", "grey")) +
theme_void()
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait))) +
geom_node_point(aes(fill = factor(trait)), shape = 21) +
scale_edge_color_manual(values = c("forestgreen", "goldenrod", "grey")) +
scale_fill_manual(values = c("forestgreen", "goldenrod", "grey")) +
theme_void()
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait))) +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = c("forestgreen", "goldenrod", "grey")) +
scale_fill_manual(values = c("forestgreen", "goldenrod", "grey")) +
theme_void()
ggraph(arch) +
geom_edge_link(aes(color = factor(trait))) +
geom_node_point(aes(color = factor(trait)))
ggraph(arch, layout = "sugiyama") +
geom_edge_link(aes(color = factor(trait))) +
geom_node_point(aes(color = factor(trait)))
ggraph(arch, layout = "sugiyama") +
geom_edge_link(aes(color = factor(trait))) +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = c("forestgreen", "goldenrod", "grey")) +
scale_fill_manual(values = c("forestgreen", "goldenrod", "grey")) +
theme_void()
ggraph(arch, layout = "sugiyama") +
geom_edge_link(aes(color = factor(trait))) +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = c("forestgreen", "goldenrod", "grey")) +
scale_fill_manual(values = c("forestgreen", "goldenrod", "grey")) +
theme_void() +
labs(fill = "Trait")
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait))) +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = c("forestgreen", "goldenrod", "grey")) +
scale_fill_manual(values = c("forestgreen", "goldenrod", "grey")) +
theme_void() +
labs(fill = "Trait")
ggraph(graph, 'focus', focus = node_is_center()) +
ggforce::geom_circle(aes(x0 = 0, y0 = 0, r = r), data.frame(r = 1:5), colour = 'grey') +
geom_edge_link() +
geom_node_point() +
coord_fixed()
ggraph(arch, 'focus', focus = node_is_center()) +
ggforce::geom_circle(aes(x0 = 0, y0 = 0, r = r), data.frame(r = 1:5), colour = 'grey') +
geom_edge_link() +
geom_node_point() +
coord_fixed()
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait), size = weight)) +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = c("forestgreen", "goldenrod", "grey")) +
scale_fill_manual(values = c("forestgreen", "goldenrod", "grey")) +
theme_void() +
labs(fill = "Trait")
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait), linewidth = weight)) +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = c("forestgreen", "goldenrod", "grey")) +
scale_fill_manual(values = c("forestgreen", "goldenrod", "grey")) +
theme_void() +
labs(fill = "Trait")
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait), alpha = weight)) +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = c("forestgreen", "goldenrod", "grey")) +
scale_fill_manual(values = c("forestgreen", "goldenrod", "grey")) +
theme_void() +
labs(fill = "Trait")
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait), lwd = weight)) +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = c("forestgreen", "goldenrod", "grey")) +
scale_fill_manual(values = c("forestgreen", "goldenrod", "grey")) +
theme_void() +
labs(fill = "Trait")
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait), width = weight)) +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = c("forestgreen", "goldenrod", "grey")) +
scale_fill_manual(values = c("forestgreen", "goldenrod", "grey")) +
theme_void() +
labs(fill = "Trait")
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait), width = abs(weight))) +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = c("forestgreen", "goldenrod", "grey")) +
scale_fill_manual(values = c("forestgreen", "goldenrod", "grey")) +
theme_void() +
labs(fill = "Trait")
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait), alpha = abs(weight))) +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = c("forestgreen", "goldenrod", "grey")) +
scale_fill_manual(values = c("forestgreen", "goldenrod", "grey")) +
theme_void() +
labs(fill = "Trait")
col_vls <- c("forestgreen", "goldenrod", "grey")
col_lbs <- levels(factor(arch$nodes$trait))
col_nm <- "Trait"
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait), alpha = abs(weight))) +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = col_vls, labels = col_lbs, name = col_nm) +
scale_fill_manual(values = col_vls, labels = col_lbs, name = col_nm) +
theme_void()00
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait), alpha = abs(weight))) +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = col_vls, labels = col_lbs, name = col_nm) +
scale_fill_manual(values = col_vls, labels = col_lbs, name = col_nm) +
theme_void()
col_vls <- c("forestgreen", "goldenrod", "grey")
col_lbs <- levels(factor(arch$nodes$trait))
col_nm <- "Trait"
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait), alpha = abs(weight))) +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = col_vls, labels = col_lbs, name = col_nm) +
scale_fill_manual(values = col_vls, labels = col_lbs, name = col_nm) +
theme_void()
arch$nodes$trait
arch$nodes
str(arch)
arch %>% activate(nodes)
arch %>%
activate(nodes) %>%
select(trait)
col_vls <- c("forestgreen", "goldenrod", "grey")
col_lbs <- 1:3
col_nm <- "Trait"
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait), alpha = abs(weight))) +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = col_vls, labels = col_lbs, name = col_nm) +
scale_fill_manual(values = col_vls, labels = col_lbs, name = col_nm) +
theme_void()
col_vls <- c("forestgreen", "goldenrod", "grey")
col_lbs <- 0:2
col_nm <- "Trait"
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait), alpha = abs(weight))) +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = col_vls, labels = col_lbs, name = col_nm) +
scale_fill_manual(values = col_vls, labels = col_lbs, name = col_nm) +
theme_void()
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait), alpha = abs(weight))) +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = col_vls, labels = col_lbs, name = col_nm) +
scale_fill_manual(values = col_vls, labels = col_lbs, name = col_nm) +
theme_void() +
labs(alpha = "Weight", size = "Degree")
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait), alpha = abs(weight))) +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = col_vls, labels = col_lbs, name = col_nm) +
scale_fill_manual(values = col_vls, labels = col_lbs, name = col_nm) +
theme_void() +
labs(alpha = "Weight", size = "Degree")
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait), alpha = abs(weight))) +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = col_vls, labels = col_lbs, name = col_nm) +
scale_fill_manual(values = col_vls, labels = col_lbs, name = col_nm) +
labs(alpha = "Weight", size = "Degree") +
theme_void()
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait), alpha = abs(weight))) +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = col_vls, labels = col_lbs, name = col_nm) +
scale_fill_manual(values = col_vls, labels = col_lbs, name = col_nm) +
scale_alpha(name = "Weight") +
theme_void()
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait), alpha = abs(weight))) +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = col_vls, labels = col_lbs, name = col_nm) +
scale_fill_manual(values = col_vls, labels = col_lbs, name = col_nm) +
scale_alpha(name = "Weight") +
theme_void()
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait), alpha = abs(weight))) +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = col_vls, labels = col_lbs, name = col_nm) +
scale_fill_manual(values = col_vls, labels = col_lbs, name = col_nm) +
labs(size = "Degree") +
theme_void()
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait), alpha = abs(weight))) +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = col_vls, labels = col_lbs, name = col_nm) +
scale_fill_manual(values = col_vls, labels = col_lbs, name = col_nm) +
labs(size = "Degree", alpha = "Weight") +
theme_void()
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait), alpha = abs(weight))) +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = col_vls, labels = col_lbs, name = col_nm) +
scale_fill_manual(values = col_vls, labels = col_lbs, name = col_nm) +
labs(size = "Degree", alpha = "Weight") +
theme_void()
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait), alpha = abs(weight))) +
labs(alpha = "Weight") +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = col_vls, labels = col_lbs, name = col_nm) +
scale_fill_manual(values = col_vls, labels = col_lbs, name = col_nm) +
labs(size = "Degree", alpha = "Weight") +
theme_void()
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait), alpha = weight)) +
labs(alpha = "Weight") +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = col_vls, labels = col_lbs, name = col_nm) +
scale_fill_manual(values = col_vls, labels = col_lbs, name = col_nm) +
labs(size = "Degree", alpha = "Weight") +
theme_void()
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait), alpha = abs(weight))) +
labs(alpha = "Weight") +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = col_vls, labels = col_lbs, name = col_nm) +
scale_fill_manual(values = col_vls, labels = col_lbs, name = col_nm) +
labs(size = "Degree", alpha = "Weight") +
theme_void()
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait), alpha = abs(weight))) +
labs(alpha = "Weight") +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = col_vls, labels = col_lbs, name = col_nm) +
scale_fill_manual(values = col_vls, labels = col_lbs, name = col_nm) +
labs(size = "Degree", edge_alpha = "Weight") +
theme_void()
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait), alpha = abs(weight))) +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = col_vls, labels = col_lbs, name = col_nm) +
scale_fill_manual(values = col_vls, labels = col_lbs, name = col_nm) +
labs(size = "Degree", edge_alpha = "Weight") +
theme_void()
ggraph(arch, layout = "graphopt") +
geom_edge_link(aes(color = factor(trait), alpha = abs(weight))) +
geom_node_point(aes(fill = factor(trait), size = degree), shape = 21) +
scale_edge_color_manual(values = col_vls, labels = col_lbs, name = col_nm) +
scale_fill_manual(values = col_vls, labels = col_lbs, name = col_nm) +
labs(size = "Degree", edge_alpha = "|Weight|") +
theme_void()
library(egssimtools)
library(egssimtools)
library(egssimtools)
?read_parameters
library(egssimtools)
library(egssimtools)
library(egssimtools)
roxygen2::roxygenize()
library(egssimtools)
library(egssimtools)
devtools::build_vignettes()
rm(list = ls())
library(egssimtools)
root <- "/media/raphael/bigass/simulations/EGS/genomes3/"
roots <- fetch_dirs(root, pattern = "sim_", level = 2)
root <- roots[1]
read_data(root, c("time", "Fst"), by = c(1, 3))
read_sim(root, "Fst", by = 3)
read_indiv <- function(
folder,
variables,
by = 3,
parnames = NULL,
combine = FALSE,
as_numeric = NULL,
parfile = "paramlog.txt"
) {
read_data(
folder,
variables,
by = c(1, by),
dupl = c("population_size", rep(1, length(variables))),
parnames = parnames,
combine = combine,
as_numeric = as_numeric,
parfile = parfile
)
}
read_data(root, c("time", "individual_trait"), by = c(1, 3), dupl = list("population_size", 1))
read_indiv <- function(
folder,
variables,
by = 3,
parnames = NULL,
combine = FALSE,
as_numeric = NULL,
parfile = "paramlog.txt"
) {
read_data(
folder,
variables = c("time", variables),
by = c(1, by),
dupl = c("population_size", rep(1, length(variables))),
parnames = parnames,
combine = combine,
as_numeric = as_numeric,
parfile = parfile
)
}
read_indiv(root, "individual_trait", by = 3)
read_indiv <- function(
folder,
variables,
by = 3,
parnames = NULL,
combine = FALSE,
as_numeric = NULL,
parfile = "paramlog.txt"
) {
read_data(
folder,
variables = c("time", variables),
by = c(1, by),
dupl = c("population_size.dat", rep(1, length(variables))),
parnames = parnames,
combine = combine,
as_numeric = as_numeric,
parfile = parfile
)
}
read_indiv(root, "individual_trait", by = 3)
read_indiv <- function(
folder,
variables,
by = 3,
parnames = NULL,
combine = FALSE,
as_numeric = NULL,
parfile = "paramlog.txt"
) {
read_data(
folder,
variables = c("time", variables),
by = c(1, by),
dupl = c("population_size", rep(1, length(variables))),
parnames = parnames,
combine = combine,
as_numeric = as_numeric,
parfile = parfile
)
}
read_indiv(root, "individual_trait", by = 3)
read_data(root, c("time", "individual_trait"), by = c(1, 3), dupl = list("population_size", 1))
variables <- "individual_trait"
by <- 3
folder <- root
read_data(
folder,
variables = c("time", variables),
by = c(1, by),
dupl = c("population_size", rep(1, length(variables))),
parnames = parnames,
combine = combine,
as_numeric = as_numeric,
parfile = parfile
)
variables
folder
read_indiv(root, "individual_trait")
read_data(
root,
c("time", "individual_trait"),
by = c(1, 3), dupl = list("population_size", 1))
read_data(
root,
c("time", variables),
by = c(1, 3), dupl = list("population_size", 1))
read_data(
root,
c("time", variables),
by = c(1, by), dupl = list("population_size", 1))
read_data(
root,
c("time", variables),
by = c(1, by), dupl = list("population_size", rep(1, length(variables))))
parnames <- NULL
combine <- FALSE
as_numeric <- NULL
parfile <- "paramlog.txt"
read_data(
root,
c("time", variables),
by = c(1, by),
dupl = list("population_size", rep(1, length(variables))),
parnames = parnames
)
read_data(
root,
c("time", variables),
by = c(1, by),
dupl = list("population_size", rep(1, length(variables))),
parnames = parnames,
combine = combine
)
read_data(
root,
c("time", variables),
by = c(1, by),
dupl = list("population_size", rep(1, length(variables))),
parnames = parnames,
combine = combine,
as_numeric = as_numeric
)
read_data(
root,
c("time", variables),
by = c(1, by),
dupl = list("population_size", rep(1, length(variables))),
parnames = parnames,
combine = combine,
as_numeric = as_numeric,
parfile = parfile
)
read_data(
folder,
c("time", variables),
by = c(1, by),
dupl = list("population_size", rep(1, length(variables))),
parnames = parnames,
combine = combine,
as_numeric = as_numeric,
parfile = parfile
)
read_indiv <- function(
folder,
variables,
by = 3,
parnames = NULL,
combine = FALSE,
as_numeric = NULL,
parfile = "paramlog.txt"
) {
read_data(
folder,
c("time", variables),
by = c(1, by),
dupl = list("population_size", rep(1, length(variables))),
parnames = parnames,
combine = combine,
as_numeric = as_numeric,
parfile = parfile
)
}
read_indiv(root, "individual_trait")
guess_nloci <- function(folder, variable = "genome_Fst") {
time <- read_binary(paste0(folder, "/time.dat"))
ntimes <- length(time)
x <- read_binary(paste0(folder, "/", variable, ".dat"))
length(x) / ntimes
}
guess_nloci(root)
read_loci <- function(
folder,
variables,
parnames = NULL,
combine = FALSE,
as_numeric = NULL,
architecture = FALSE,
archfile = "architecture.txt",
parfile = "paramlog.txt"
) {
nloci <- guess_nloci(folder, variables[1])
read_data(
folder,
c("time", variables),
by = rep(1, length(variables) + 1),
dupl = list(nloci, rep(1, length(variables))),
parnames = parnames,
combine = combine,
as_numeric = as_numeric,
architecture = architecture,
archfile = archfile,
parfile = parfile
)
}
read_loci(root, "genome_Fst")
roxygenr
roxygen2::roxygenise()
library(egssimtools)
