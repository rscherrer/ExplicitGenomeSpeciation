split(f = factor(seq(nrow(cmb))))
cmb
cmb <- expand_grid(hsymmetry, scaleI, seed)
# Add extra parameters
cmb <- cmb %>%
mutate(
ecosel = ifelse(hsymmetry == 0, 1, 1.6),
scaleA = ifelse(scaleI == "0 0 0", "1 1 1", "0 0 0"),
tend = 20000,
tsave = 100
)
cmb <- cmb %>% split(f = factor(seq(nrow(cmb))))
folders <- paste0("sim", 1:20)
filename <- "%s/parameters.txt"
folders
folders %>% dir.create
folders <- paste0("./sim", 1:20)
folders %>% dir.create
folders <- paste0("sim", 1:20)
folders %>% map(dir.create)
map2(cmb, folders, ~ set_param_file(.x, template = "parameters.txt", saveto = .y))
map2(cmb, folders, ~ set_param_file(.x, template, saveto = sprintf(filename, .y)))
whattosave <- c(
"time",
"EI",
"RI",
"SI",
"population_size",
"individual_trait",
"Fst",
"Gst",
"Qst",
"Cst",
"varG",
"varA",
"varN",
"varT",
"genome_Fst",
"genome_Gst",
"genome_Qst",
"genome_Cst",
"genome_varG",
"genome_varA",
"genome_varN",
"genome_alpha",
"genome_meang",
"genome_freq",
"network_corgen",
"network_corbreed",
"network_corfreq",
"network_avgi",
"network_avgj"
)
folders
sprintf("%s/whattosave.txt", folders)
rm(list = ls())
library(egssimtools)
library(tidyr)
# Setup parameter combinations
hsymmetry <- c(0, 1)
scaleI <- c('0 0 0', '1 1 1')
seed <- c(24, 42, 53, 12, 66)
cmb <- expand_grid(hsymmetry, scaleI, seed)
# Add extra parameters
cmb <- cmb %>%
mutate(
ecosel = ifelse(hsymmetry == 0, 1, 1.6),
scaleA = ifelse(scaleI == "0 0 0", "1 1 1", "0 0 0"),
tend = 20000,
tsave = 100
)
# Make parameter files and save them into respective folders
cmb <- cmb %>% split(f = factor(seq(nrow(cmb))))
folders <- paste0("sim", 1:20)
folders %>% map(dir.create)
filename <- "%s/parameters.txt"
template <- "parameters.txt"
map2(cmb, folders, ~ set_param_file(.x, template, saveto = sprintf(filename, .y)))
roxygenize()
library(egssimtools)
rm(list = ls())
library(egssimtools)
library(tidyr)
# Setup parameter combinations
hsymmetry <- c(0, 1)
scaleI <- c('0 0 0', '1 1 1')
seed <- c(24, 42, 53, 12, 66)
cmb <- expand_grid(hsymmetry, scaleI, seed)
# Add extra parameters
cmb <- cmb %>%
mutate(
ecosel = ifelse(hsymmetry == 0, 1, 1.6),
scaleA = ifelse(scaleI == "0 0 0", "1 1 1", "0 0 0"),
tend = 20000,
tsave = 100
)
# Make parameter files and save them into respective folders
cmb <- cmb %>% split(f = factor(seq(nrow(cmb))))
folders <- paste0("sim", 1:20)
folders %>% map(dir.create)
filename <- "%s/parameters.txt"
template <- "parameters.txt"
map2(cmb, folders, ~ set_param_file(.x, template, saveto = sprintf(filename, .y)))
# Write a whattosave into each simulation folder
whattosave <- c(
"time",
"EI",
"RI",
"SI",
"population_size",
"individual_trait",
"Fst",
"Gst",
"Qst",
"Cst",
"varG",
"varA",
"varN",
"varT",
"genome_Fst",
"genome_Gst",
"genome_Qst",
"genome_Cst",
"genome_varG",
"genome_varA",
"genome_varN",
"genome_alpha",
"genome_meang",
"genome_freq",
"network_corgen",
"network_corbreed",
"network_corfreq",
"network_avgi",
"network_avgj"
)
map(
sprintf("%s/whattosave.txt", folders),
function(fname) {
f <- file(fname)
writeLines(whattosave, f)
close(f)
}
)
root <- "/media/raphael/bigass/simulations/EGS/"
root <- "/media/raphael/bigass/simulations/EGS/genomes"
roots <- fetch_dirs(root, pattern = "^sim", level = 1)
library(egssimtools)
roots <- fetch_dirs(root, pattern = "^sim", level = 1)
roots <- find_extant(roots)
?read_data
variables <- c("EI", "RI", "SI")
roots %>% map_dfr(read_data, variables)
variables <- c("EI", "RI", "SI", "Fst")
by <- c(1, 1, 1, 3)
data <- roots %>% map_dfr(read_data, variables, by = by)
variables <- c("time", "EI", "RI", "SI", "Fst")
by <- c(1, 1, 1, 1, 3)
data <- roots %>% map_dfr(read_data, variables, by = by)
variables <- c("time", "EI", "RI", "SI", "Fst", "Gst", "Qst", "Cst", "varG", "varA", "varN", "varT")
by <- c(1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3)
data <- roots %>% map_dfr(read_data, variables, by = by)
head(data)
library(ggsim)
ggplotline(data, x = "time", y = "EI")
gglineplot(data, x = "time", y = "EI")
data$simulation <- seq(nrow(data))
gglineplot(data, x = "time", y = "EI")
gglineplot(data, x = "time", y = "EI", line = "simulation")
variables <- c("time", "EI", "RI", "SI", "Fst", "Gst", "Qst", "Cst", "varG", "varA", "varN", "varT")
by <- c(1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3)
data <- roots %>% map_dfr(read_data, variables, by = by, .id = "simulation")
gglineplot(data, x = "time", y = "EI", line = "simulation")
gglineplot(data, x = "time", y = "Fst1", line = "simulation")
gglineplot(data, x = "EI", y = "Fst1", line = "simulation")
gglineplot(data, x = "RI", y = "Fst1", line = "simulation")
gglineplot(data, x = "RI", y = "Fst2", line = "simulation")
gglineplot(data, x = "RI", y = "Fst3", line = "simulation")
gglineplot(data, x = "time", y = "RI", line = "simulation")
gglineplot(data, x = "time", y = "varA", line = "simulation")
gglineplot(data, x = "time", y = "varA1", line = "simulation")
parnames <- c("ecosel", "hsymmetry", "scaleI")
data <- roots %>% map_dfr(read_data, variables, by = by, parnames = parnames, .id = "simulation")
gglineplot(data, x = "time", y = "varA1", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "time", y = "varN1", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "varA1", y = "varN1", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "varA1", y = "varA2", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "EI", y = "varA1", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "EI", y = "varN1", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "time", y = "EI", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "time", y = "varA2", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "time", y = "varA1", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "time", y = "varA3", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "time", y = "Fst", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "time", y = "Fs1t", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "time", y = "Fst1", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "time", y = "Fst2", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "time", y = "Fst3", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "time", y = "Gst1", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "time", y = "Gst2", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "time", y = "Gst3", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "time", y = "Qst1", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "time", y = "varA1", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "time", y = "Qst1", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "varA1", y = "Qst1", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "time", y = "Qst1", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "time", y = "Qst2", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "time", y = "Qst3", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "time", y = "Cst1", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "time", y = "Cst2", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "time", y = "Cst3", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
gglineplot(data, x = "time", y = "Fst1", line = "simulation") +
facet_grid(hsymmetry ~ scaleI1)
?read_data
data2 <- roots %>% map_dfr(function(root) {
d <- read_data(root, variables, by = by, parnames = parnames)
a <- read_genome_architecture(root)
data.frame(d, a)
}, i.d = "simulation")
data2 <- roots %>% map_dfr(function(root) {
d <- read_data(root, variables, by = by, parnames = parnames)
a <- read_genome_architecture(root)
data.frame(d, a)
}, .id = "simulation")
variables <- c("time", "genome_Fst")
by <- c(1, 1)
dupl <- c(300, 1)
parnames <- c("ecosel", "hsymmetry", "scaleI")
data2 <- roots %>% map_dfr(function(root) {
d <- read_data(root, variables, by = by, parnames = parnames)
a <- read_genome_architecture(root)
data.frame(d, a)
}, .id = "simulation")
data2 <- roots %>% map_dfr(function(root) {
d <- read_data(root, variables, by = by, dupl = dupl, parnames = parnames)
a <- read_genome_architecture(root)
data.frame(d, a)
}, .id = "simulation")
head(data)
head(data2)
rm(list = ls())
library(egssimtools)
root <- "/media/raphael/bigass/simulations/EGS/"
fname <- paste0(root, "simulations.rds")
data <- readRDS(fname)
root <- "/media/raphael/bigass/simulations/EGS/genomes/"
fname <- paste0(root, "simulations.rds")
data <- readRDS(fname)
rm(list = ls())
library(egssimtools)
root <- "/media/raphael/bigass/simulations/EGS/genomes/"
fname <- paste0(root, "simulations.rds")
tidyv
library(tidyverse)
root <- "/media/raphael/bigass/simulations/EGS/genomes/"
fname <- paste0(root, "simulations.rds")
data <- readRDS(fname)
root <- list.files(root)[1]
variables <- c("time", "Fst", "Gst", "Qst", "Cst")
by <- c(1, 3, 3, 3, 3)
dupl <- c(1, 1, 1, 1, 1)
parnames <- c("hsymmetry", "ecosel", "scaleI", "seed")
as_numeric <- parnames
read_data(root, variables = variables, by = by, dupl = dupl, parnames = parnames, as_numeric = as_numeric)
root
root <- "/media/raphael/bigass/simulations/EGS/genomes/"
root <- list.files(root)[1]
variables <- c("time", "Fst", "Gst", "Qst", "Cst")
by <- c(1, 3, 3, 3, 3)
dupl <- c(1, 1, 1, 1, 1)
parnames <- c("hsymmetry", "ecosel", "scaleI", "seed")
as_numeric <- parnames
data <- read_data(root, variables = variables, by = by, dupl = dupl, parnames = parnames, as_numeric = as_numeric)
root
root <- "/media/raphael/bigass/simulations/EGS/genomes/"
list.files(root)
root <- list.dirs(root, recursive = FALSE)[1]
variables <- c("time", "Fst", "Gst", "Qst", "Cst")
by <- c(1, 3, 3, 3, 3)
dupl <- c(1, 1, 1, 1, 1)
parnames <- c("hsymmetry", "ecosel", "scaleI", "seed")
as_numeric <- parnames
data <- read_data(root, variables = variables, by = by, dupl = dupl, parnames = parnames, as_numeric = as_numeric)
head(data)
?read_data
library(roxygen2)
roxygenize()
library(egssimtools)
?collect_sims
root <- "/media/raphael/bigass/simulations/EGS/genomes/"
data <- collect_sims(
root, variables, by = by, dupl = dupl, parnames = parnames,
as_numeric = as_numeric, check_extant = FALSE, level = 1
)
data
data
root
data <- collect_sims(
root, variables, by = by, dupl = dupl, parnames = parnames,
as_numeric = as_numeric, check_extant = FALSE, level = 1, pattern = "sim"
)
library(egssimtools)
data <- collect_sims(
root, variables, by = by, dupl = dupl, parnames = parnames,
as_numeric = as_numeric, check_extant = FALSE, level = 1, pattern = "sim"
)
data
data$sim
data$sim %>% unique
head(data)
data %>%
ggplot(aes(x = time, y = EI)) +
facet_grid(hsymmetry ~ scaleI1)
data %>%
ggplot(aes(x = time, y = Fst1)) +
facet_grid(hsymmetry ~ scaleI1)
library(ggsim)
data %>%
gglineplot(x = "time", y = "Fst1") +
facet_grid(hsymmetry ~ scaleI1)
data %>%
gglineplot(x = "time", y = "Fst1", line = "sim") +
facet_grid(hsymmetry ~ scaleI1)
data %>%
gglineplot(x = "time", y = "Cst1", line = "sim") +
facet_grid(hsymmetry ~ scaleI1)
data %>%
gglineplot(x = "time", y = "Gst1", line = "sim") +
facet_grid(hsymmetry ~ scaleI1)
data %>%
gglineplot(x = "time", y = "Qst1", line = "sim") +
facet_grid(hsymmetry ~ scaleI1)
data %>%
gglineplot(x = "time", y = "Cst1", line = "sim") +
facet_grid(hsymmetry ~ scaleI1)
data %>%
gglineplot(x = "time", y = "Cst1", line = "sim") %>%
ggfacet("hsymmetry", "scaleI1")
data %>%
gglineplot(x = "time", y = "Cst1", line = "sim") %>%
ggfacet("hsymmetry", "scaleI1", prepend = c(hsymmetry = "h = ", scaleI1 = "sigmaI = "))
data %>%
gglineplot(x = "time", y = "Cst1", line = "sim") %>%
ggfacet("hsymmetry", "scaleI1", prepend = c(hsymmetry = "h = ", scaleI1 = "sigma_i= "))
data %>%
gglineplot(x = "time", y = "Cst1", line = "sim") %>%
ggfacet("hsymmetry", "scaleI1", prepend = c(hsymmetry = "h = ", scaleI1 = "sigma_i = "))
variables <- c("time", "Fst", "Gst", "Qst", "Cst", "varG", "varA", "varN", "varT")
root <- list.dirs(root, recursive = FALSE)[1]
variables <- c("time", "Fst", "Gst", "Qst", "Cst", "varG", "varA", "varN", "varT")
by <- c(1, 3, 3, 3, 3, 3, 3, 3, 3)
dupl <- c(1, 1, 1, 1, 1, 1, 1, 1, 1)
parnames <- c("hsymmetry", "ecosel", "scaleI", "seed")
as_numeric <- parnames
data <- collect_sims(
root, variables, by = by, dupl = dupl, parnames = parnames,
as_numeric = as_numeric, check_extant = FALSE, level = 1, pattern = "sim"
)
data %>%
gglineplot(x = "time", y = "1", line = "sim") %>%
ggfacet("hsymmetry", "scaleI1", prepend = c(hsymmetry = "h = ", scaleI1 = "sigma_i = "))
data
rm(list = ls())
library(egssimtools)
library(tidyverse)
library(ggsim)
root <- "/media/raphael/bigass/simulations/EGS/genomes/"
root <- list.dirs(root, recursive = FALSE)[1]
variables <- c("time", "Fst", "Gst", "Qst", "Cst", "varG", "varA", "varN", "varT")
by <- c(1, 3, 3, 3, 3, 3, 3, 3, 3)
dupl <- c(1, 1, 1, 1, 1, 1, 1, 1, 1)
parnames <- c("hsymmetry", "ecosel", "scaleI", "seed")
as_numeric <- parnames
data <- collect_sims(
root, variables, by = by, dupl = dupl, parnames = parnames,
as_numeric = as_numeric, check_extant = FALSE, level = 1, pattern = "sim"
)
data %>%
gglineplot(x = "time", y = "1", line = "sim") %>%
ggfacet("hsymmetry", "scaleI1", prepend = c(hsymmetry = "h = ", scaleI1 = "sigma_i = "))
root <- "/media/raphael/bigass/simulations/EGS/genomes/"
root <- list.dirs(root, recursive = FALSE)[1]
variables <- c("time", "Fst", "Gst", "Qst", "Cst", "varG", "varA", "varN", "varT")
by <- c(1, 3, 3, 3, 3, 3, 3, 3, 3)
dupl <- c(1, 1, 1, 1, 1, 1, 1, 1, 1)
parnames <- c("hsymmetry", "ecosel", "scaleI", "seed")
as_numeric <- parnames
data <- collect_sims(
root, variables, by = by, dupl = dupl, parnames = parnames,
as_numeric = as_numeric, check_extant = FALSE, level = 1, pattern = "sim"
)
data %>%
gglineplot(x = "time", y = "1", line = "sim") %>%
ggfacet("hsymmetry", "scaleI1", prepend = c(hsymmetry = "h = ", scaleI1 = "sigma_i = "))
function (..., list = character(), package = NULL, lib.loc = NULL,
verbose = getOption("verbose"), envir = .GlobalEnv, overwrite = TRUE)
root <- list.dirs(root, recursive = FALSE)[1]
variables <- c("time", "Fst", "Gst", "Qst", "Cst", "varG", "varA", "varN", "varT")
by <- c(1, 3, 3, 3, 3, 3, 3, 3, 3)
dupl <- c(1, 1, 1, 1, 1, 1, 1, 1, 1)
parnames <- c("hsymmetry", "ecosel", "scaleI", "seed")
as_numeric <- parnames
data <- collect_sims(
root, variables, by = by, dupl = dupl, parnames = parnames,
as_numeric = as_numeric, check_extant = FALSE, level = 1, pattern = "sim"
)
root
root <- "/media/raphael/bigass/simulations/EGS/genomes/"
variables <- c("time", "Fst", "Gst", "Qst", "Cst", "varG", "varA", "varN", "varT")
by <- c(1, 3, 3, 3, 3, 3, 3, 3, 3)
dupl <- c(1, 1, 1, 1, 1, 1, 1, 1, 1)
parnames <- c("hsymmetry", "ecosel", "scaleI", "seed")
as_numeric <- parnames
data <- collect_sims(
root, variables, by = by, dupl = dupl, parnames = parnames,
as_numeric = as_numeric, check_extant = FALSE, level = 1, pattern = "sim"
)
data %>%
gglineplot(x = "time", y = "1", line = "sim") %>%
ggfacet("hsymmetry", "scaleI1", prepend = c(hsymmetry = "h = ", scaleI1 = "sigma_i = "))
data
data %>%
gglineplot(x = "time", y = "1", line = "sim")
data %>%
gglineplot(x = "time", y = "varA1", line = "sim") %>%
ggfacet("hsymmetry", "scaleI1", prepend = c(hsymmetry = "h = ", scaleI1 = "sigma_i = "))
data %>%
gglineplot(x = "time", y = "varN1", line = "sim") %>%
ggfacet("hsymmetry", "scaleI1", prepend = c(hsymmetry = "h = ", scaleI1 = "sigma_i = "))
data %>%
gglineplot(x = "time", y = "Cst1", line = "sim") %>%
ggfacet("hsymmetry", "scaleI1", prepend = c(hsymmetry = "h = ", scaleI1 = "sigma_i = "))
all(data$varN1 >= 0)
data %>%
gglineplot(x = "time", y = "Cst2", line = "sim") %>%
ggfacet("hsymmetry", "scaleI1", prepend = c(hsymmetry = "h = ", scaleI1 = "sigma_i = "))
data %>%
gglineplot(x = "time", y = "Cst3", line = "sim") %>%
ggfacet("hsymmetry", "scaleI1", prepend = c(hsymmetry = "h = ", scaleI1 = "sigma_i = "))
data <- collect_sims(root, c("time", "genome_Cst"), by = c(1, 1), dupl = c(300, 1),
parnames = parnames, check_extant = FALSE, level = 1, pattern = "sim")
head(data)
data %>%
filter(time == 19900) %>%
mutate(locus = seq(n()))
data %>%
filter(time == 19900) %>%
mutate(locus = seq(n())) %>%
ggplot(aes(x = locus, y = genome_Cst)) +
geom_point() %>%
ggfacet("hsymmetry", "scaleI1", prepend = c(hsymmetry = "h = ", scaleI1 = "sigma_i = "))
p <- data %>%
filter(time == 19900) %>%
mutate(locus = seq(n())) %>%
ggplot(aes(x = locus, y = genome_Cst)) +
geom_point()
ggfacet(p, "hsymmetry", "scaleI1", prepend = c(hsymmetry = "h = ", scaleI1 = "sigma_i = "))
any(data$genome_Cst < 0)
rm(list = ls())
library(egssimtools)
library(tidyverse)
root <- "/media/raphael/bigass/simulations/EGS/mutator/"
variables <- c("time", "EI", "RI", "SI")
parnames <- c("hsymmetry", "ecosel", "scaleA", "scaleI")
?collect_sims
data <- collect_sims(root, level = 1, pattern = "sim_", variables = variables,
by = c(1, 3, 3, 3), parnames = parnames, check_extant = TRUE,
as_numeric = parnames)
library(egssimtools)
data <- collect_sims(root, level = 1, pattern = "sim_", variables = variables,
by = c(1, 3, 3, 3), parnames = parnames, check_extant = TRUE,
as_numeric = parnames)
data
root <- "/media/raphael/bigass/simulations/EGS/mutator/"
variables <- c("time", "EI", "RI", "SI")
parnames <- c("hsymmetry", "ecosel", "scaleA", "scaleI")
data <- collect_sims(root, level = 1, pattern = "sim_", variables = variables,
by = c(1, 3, 3, 3), parnames = parnames, check_extant = TRUE,
as_numeric = parnames)
data <- collect_sims(root, level = 2, pattern = "sim_", variables = variables,
by = c(1, 3, 3, 3), parnames = parnames, check_extant = TRUE,
as_numeric = parnames)
data <- collect_sims(root, level = 2, pattern = "sim_", variables = variables,
parnames = parnames, check_extant = TRUE,
as_numeric = parnames)
