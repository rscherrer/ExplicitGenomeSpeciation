% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/collect_genome.R
\name{collect_genome}
\alias{collect_genome}
\title{Collect locus-wise data from across simulations}
\usage{
collect_genome(
  root,
  variables,
  nloci,
  by = 1,
  dupl = 1,
  parnames = NULL,
  combine = FALSE,
  as_numeric = NULL,
  check_extant = TRUE,
  pattern = "sim_",
  level = 0,
  verbose = TRUE,
  id_column = "sim",
  architecture = FALSE,
  archfile = "architecture.txt",
  parfile = "paramlog.txt"
)
}
\arguments{
\item{root}{One of multiple paths to simulation folders or folders into
which to recurse to look for simulation folders.}

\item{variables}{Names of the variables to extract}

\item{nloci}{The number of loci. Guessed if unspecified.}

\item{by, parnames, combine, as_numeric}{Parameters to be passed to
\code{read_data}}

\item{check_extant}{Whether to check for non-extinct and non-crashed
simulation folders}

\item{pattern}{Optional pattern to look for if simulation folders are
searched by recursion}

\item{level}{Level of recursion. Defaults to 0 for no recursion (then assumes
that \code{root} is a vector of simulation folder paths).}

\item{verbose}{Whether to display messages and progress bars}

\item{id_column}{Optional name of the simulation identifier column}

\item{architecture}{Whether to read a genetic architecture with the
(locus-wise) data}

\item{archfile}{Name of the architecture file}

\item{parfile}{Name of the parameter file}
}
\value{
A tibble
}
\description{
Collect specified variables and parameters from across multiple simulation
folders
}
\examples{

\dontrun{

# Location of the simulation folder
root <- "data"

# Collect simulation data with some parameters
collect_genome(
  root, "genome_Fst", nloci = 300, pattern = "example", level = 1,
  check_extant = FALSE, parnames = c("ecosel", "hsymmetry")
)

}

}
